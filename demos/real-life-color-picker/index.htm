<!DOCTYPE html>
<html>
<title>Real Life color picker using getUserMedia from the WebRTC spec</title>
<head>
<style type="text/css">

@font-face {
	font-family: 'chunk';
	src: url('fonts/Chunkfive.eot');
	src: local('â˜º'), url('fonts/Chunkfive.woff') format('woff'), url('fonts/Chunkfive.ttf') format('truetype'), url('fonts/Chunkfive.svg') format('svg');
	font-weight: normal;
	font-style: normal;
}

body{
	background-color: /*#ded3bd*/ /*#f8f7ee*/ #ede1cb;
	color: #555;
	font-family: "lucida grande", tahoma, verdana, arial, sans-serif;
}

#supcontainer{
	margin: 0 auto;
	padding: 10px;
	width: 600px;
	text-align: center;
	border: 1px solid #333;
	background-color: #faf7f2;
	border-radius: 3px;
}

h1{
	font-family: 'chunk';
	font-size: 2.5em;
	margin: 0;
}

a{
	color: #555;
}

#mycanvas{
	display: none;
}

#primesquare{
	width: 50px;
	height: 50px;
	outline: 1px solid #fff;
	display: inline-block;
}

#video{
	width: 510px;
	box-shadow: 0px 3px 5px #444;
}

.othercolors{
	width: 25px;
	height: 25px;
	outline: 1px solid #fff;
	display: inline-block;
	transition-property: transform !important;
	transition-duration: 0.3s !important;
	margin-top: 10px;
}

.othercolors :hover{
	transform: scale(1.2) !important;
	border: 3px dotted #ff0;
	
}

.hide{
	display: none;
}

#colors {
	margin-top: 5px;
	text-align: left;
}

#colorlist li{
	list-style: none;
	font-size: 1.4em;
	border-bottom: 1px dotted #333;
}


.button{
	display:block;
			outline: none;
			cursor: pointer;
			text-align: center;
			text-decoration: none;
			padding: .5em 2em .55em;
			border-radius: 5px;
			box-shadow: 0 1px 2px rgba(0,0,0,.2);
			font-size: 0.8em;
			margin-top: 5px;
			color: #fef4e9;
			border: solid 1px #da7c0c;
			background: #f78d1d;
			background: -webkit-gradient(linear, left top, left bottom, from(#faa51a), to(#f47a20));
			background: -moz-linear-gradient(top,  #faa51a,  #f47a20);
			background: -o-linear-gradient(top,  #faa51a,  #f47a20);	display: inline-block;
}




footer{
	margin-top: 20px;
	font-family: 'chunk';

}

</style>

	<meta name="viewport" content="width=device-width,initial-scale=0.7">	
	
	<script src="js/libs/quantize.js"></script>
</head>

</head>
<body>
<div id="supcontainer">
<h1>Real Life Color Picker</h1>
<div id="container">
<div id="video_container">
<video id="video" autoplay></video>
</div>
<div id="footer">
<canvas id="mycanvas" width="300" height="425"></canvas>
</div>
<div id="doit" class="button">Create Pallete</div> <div id="reset" class="button">Reset</div>
<div id="colors">
<ul id="colorlist">
</ul>
</div>
</div>
<footer>Made by <a href="http://twitter.com/shwetank">Shwetank</a>. Built upon work by <a href="http://www.lokeshdhakar.com">Lokesh Dhakar</a> on <a href="http://www.lokeshdhakar.com/2011/11/03/color-thief/">Color Thief</a>.

</footer>
</div>

<script type="text/javascript">
//var button = document.querySelector('#button');
//button.addEventListener('click',snapshot, false);


var video_element = document.querySelector('#video');
var resetButton = document.querySelector("#reset");
var cPallete = document.querySelector("#doit");


video_element.addEventListener('click', takeimage, true);
cPallete.addEventListener('click', takeimage, true);
resetButton.addEventListener('click', reset, true);

var options = {
	"audio": false,
	"video": true
};

if (navigator.getUserMedia){
	//navigator.getUserMedia('video', v_success, v_error);
	//try { navigator.getUserMedia({'video': true}, v_success); } catch (error) {alert('error: '+error.name);}
	navigator.getUserMedia(options, v_success);
} else{
	not_supported();
}

function not_supported(){
	//alert('thediv');
	var vid_c = document.querySelector("#video_container");
	vid_c.innerHTML = "<img src = \"img\/qm.gif\" alt=\"Get a browser with getUserMedia support\" />";
	resetButton.className = "hide";
	cPallete.className = "hide";
}

function v_success(stream){
	video_element.src = stream;
}

function v_error(error){
	console.log("Error! Error code is:"+error.code);
}

function takeimage(){
var canvas = document.querySelector('#mycanvas');
var ctx = canvas.getContext('2d');
var cw = canvas.width;
var ch = canvas.height;
var pixelCount = cw*ch;
ctx.drawImage(video_element, 0, 0, cw, ch);
var pixels = ctx.getImageData(0, 0, cw, ch).data;
otherColors(pixels, pixelCount);
}

function dominantColor(pixels, pixelCount) {
	var pixelArray = [];
	for (var i = 0; i < pixelCount; i++) {  
		// If pixel is mostly opaque and not white
		if(pixels[i*4+3] >= 125){
			if(!(pixels[i*4] > 250 && pixels[i*4+1] > 250 && pixels[i*4+2] > 250)){
	   			pixelArray.push( [pixels[i*4], pixels[i*4+1], pixels[i*4+2]]);
			}
		}
	}

	// Send array to quantize function which clusters values
	// using median cut algorithm
	var cmap = MMCQ.quantize(pixelArray, 5);
	var newPalette = cmap.palette();
	
	var colorArray = {"r": newPalette[0][0], "g": newPalette[0][1], "b": newPalette[0][2]};

	//alert("R: "+colorArray.r+", G:"+colorArray.g+" B:"+ colorArray.b +"");

	var primarySqaure = document.querySelector("#primesquare");
	primarySqaure.setAttribute('style', "background-color:rgb("+colorArray.r+", "+colorArray.g+", "+colorArray.b+");");

}


function otherColors(pixels, pixelCount) {
	var pixelArray = [];
	for (var i = 0; i < pixelCount; i++) {  
		// If pixel is mostly opaque and not white
		if(pixels[i*4+3] >= 125){
			if(!(pixels[i*4] > 250 && pixels[i*4+1] > 250 && pixels[i*4+2] > 250)){
	   			pixelArray.push( [pixels[i*4], pixels[i*4+1], pixels[i*4+2]]);
			}
		}
	}

	// Send array to quantize function which clusters values
	// using median cut algorithm
	var cmap = MMCQ.quantize(pixelArray, 16);
	var newPalette = cmap.palette();
	var colors = document.querySelector("#colors");
	var colorlist = document.querySelector("#colorlist");
	
	for (var i=0; i<=newPalette.length; i++){
		//alert("R: "+newPalette[i][0]+", G:"+newPalette[i][1]+", B"+newPalette[i][2]+"");
		var theli = document.createElement('li');
		var thediv = document.createElement('div');
		thediv.className = 'othercolors';
		thediv.setAttribute('style', "background-color:rgba("+newPalette[i][0]+","+newPalette[i][1]+","+newPalette[i][2]+", 1.0) !important;");
		
		
		theli.appendChild(thediv);
		theli.innerHTML += " rgba("+newPalette[i][0]+","+newPalette[i][1]+","+newPalette[i][2]+")";
		colorlist.appendChild(theli);
		
	}

}


function reset() {
	var colorlist = document.querySelector("#colorlist");
	colorlist.innerHTML = "";
}


</script>

<!-- Start of StatCounter Code for Default Guide -->
<script type="text/javascript">
var sc_project=7318646; 
var sc_invisible=1; 
var sc_security="98eeb67b"; 
</script>
<script type="text/javascript"
src="http://www.statcounter.com/counter/counter.js"></script>
<noscript><div class="statcounter"><a title="web counter"
href="http://statcounter.com/free-hit-counter/"
target="_blank"><img class="statcounter"
src="http://c.statcounter.com/7318646/0/98eeb67b/1/"
alt="web counter"></a></div></noscript>
<!-- End of StatCounter Code for Default Guide -->

</body>
</html>