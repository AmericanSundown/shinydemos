<!DOCTYPE html>
<html manifest="resources.manifest">
<head>
<style type="text/css">
@-o-viewport {
  width: device-width;
  height: device-height;
}

@font-face {
    font-family: 'bebas';
    src: url('bebas.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

body{
	background-color: #999;
	background-image: url('back2.png');
	font-family: 'bebas';
	margin: 0;
	padding: 0;
	height: 100%;
	color: #fff;
}

#container{
	background-color: #ccc;
	background-image: -o-linear-gradient(#333, #000) !important;
	width: 610px;
	margin-top: 25px;
	margin-left: auto;
	margin-right: auto;
	padding: 10px;
	border-left: 1px solid #333;
	border-right:  1px solid #333;
	height: 100%;
	text-align: center;
	border-bottom: 1px solid #333;
	border-top: 1px solid #333;
	box-shadow: 1px 12px 10px #222;
	border-radius: 5px;
	opacity: 0.9;
}

a {
	text-decoration: none;
	color: inherit;
}

a:hover {
	text-decoration: underline;
}

video{
	visibility: hidden;
	display: none ;
}

canvas{
	width: 300px;
	height: 180px;
	box-shadow: 1px 1px 2px #000;
	-o-transition-property: -o-transform, box-shadow;
	-o-transition-timing-function: ease;
	-o-transition-duration: 0.4s;
	
	-webkit-transition-property: -webkit-transform, box-shadow;
	-webkit-transition-timing-function: ease;
	-webkit-transition-duration: 0.4s;
	
	-moz-transition-property: -moz-transform, box-shadow;
	-moz-transition-timing-function: ease;
	-moz-transition-duration: 0.4s;
	
	-ms-transition-property: -ms-transform, box-shadow;
	-ms-transition-timing-function: ease;
	-ms-transition-duration: 0.4s;
	
	transition-property: transform, box-shadow;
	transition-timing-function: ease;
	transition-duration: 0.4s;
}

#red:hover{
	-o-transform: rotate(10deg) scale(1.1) translate(20px, 15px);
	-webkit-transform: rotate(10deg) scale(1.1) translate(20px, 15px);
	-moz-transform: rotate(10deg) scale(1.1) translate(20px, 15px);
	-ms-transform: rotate(10deg) scale(1.1) translate(20px, 15px);
	transform: rotate(10deg) scale(1.1) translate(20px, 15px);
	box-shadow: 3px 3px 3px #000;
}

#green:hover{
	-o-transform: rotate(10deg) scale(1.1) translate(-20px, 15px);
	-webkit-transform: rotate(10deg) scale(1.1) translate(-20px, 15px);
	-moz-transform: rotate(10deg) scale(1.1) translate(-20px, 15px);
	-ms-transform: rotate(10deg) scale(1.1) translate(-20px, 15px);
	transform: rotate(10deg) scale(1.1) translate(-20px, 15px);
	box-shadow: 3px 3px 3px #000;
}

#blue:hover{
	-o-transform: rotate(10deg) scale(1.1) translate(20px, -15px);
	-webkit-transform: rotate(10deg) scale(1.1) translate(20px, -15px);
	-moz-transform: rotate(10deg) scale(1.1) translate(20px, -15px);
	-ms-transform: rotate(10deg) scale(1.1) translate(20px, -15px);
	transform: rotate(10deg) scale(1.1) translate(20px, -15px);
	box-shadow: 3px 3px 3px #000;
}

#yellow:hover{
	-o-transform: rotate(10deg) scale(1.1) translate(-20px,-15px);
	-webkit-transform: rotate(10deg) scale(1.1) translate(-20px,-15px);
	-moz-transform: rotate(10deg) scale(1.1) translate(-20px,-15px);
	-ms-transform: rotate(10deg) scale(1.1) translate(-20px,-15px);
	transform: rotate(10deg) scale(1.1) translate(-20px,-15px);
	box-shadow: 3px 3px 3px #000;
}



#mycanvas{
	visibility: hidden;
	display: none;
}

footer{
	clear: both;
	    font-family: 'bebas';
	    color: #e33052;
	    margin-top: 10px;
}
h1{		
		font-family: 'bebas';
	    font-size: 2.6em;
}

code{
	font-size: 0.9em;
}

</style>



</head>
<body>
<div id="container">
<h1>Warholized version of you</h1>
<div id="message"></div>
<video id="video" autoplay></video>
<div id="footer">
<canvas id="mycanvas"></canvas>
</div>

<div id="warholediv">
<canvas id="red"></canvas>
<canvas id="green"></canvas>
<br />
<canvas id="blue"></canvas>
<canvas id="yellow"></canvas>
</div>
<label for="slider">Threshold:</label> <input type="range" name="slider" value="45" min="0" max="100" id="slider"></input>
  <output id="thresholdoutput" name="result"  value="5" onforminput="value=slider.value">45</output> <br />

<label for="slider">Alpha Channel:</label> <input type="range" name="aslider" value="255" min="0" max="255" id="aslider"></input>
  <output id="alphaoutput" name="result"  value="5" onforminput="value=aslider.value">255</output>
  
  <footer>Made by <a href="http://twitter.com/shwetank">Shwetank Dixit</a></footer>
</div>
<script type="text/javascript">


var video_element = document.querySelector('#video');
var thecanvas = document.querySelector('#mycanvas');
var slider = document.querySelector('#slider');
var asliider = document.querySelector('#aslider');
var output = document.querySelector('#thresholdoutput');
var aoutput = document.querySelector('#alphaoutput');

slider.addEventListener('change', changeThreshold, true);
aslider.addEventListener('change', changeAlpha, true);

var canvases = document.querySelectorAll('canvas');
for (var i=0; i<canvases.length;i++){
	canvases[i].addEventListener('click', newimg, true);
}

var error = 1;
var threshold = 45;
var alpha = 255;
var notsupported = 0;

if (navigator.getUserMedia){
	navigator.getUserMedia('video', v_success, v_error);
} else if (opera.getUserMedia){
	navigator.getUserMedia('video', v_success, v_error);
} else{
	not_supported();
	notsupported = 1;
}

function not_supported(){
	var message = document.querySelector('#message');
	message.innerHTML = "<h1>Camera access is not supported by this browser, so this demo will not run properly. Using HTML5 &lt;video&gt; fallback instead.</h1>";
	
	video.src = "wsh.webm";
	var t=setInterval(copyVideoToCanvas, 100);
}

function v_success(stream){
	video.src = stream;
	var t=setInterval(copyVideoToCanvas, 100);
	//opera.postError('success!');
}

function v_error(error){
	opera.postError("Error! Error code is:"+error.code);
	error = 0;
	
	video.src = "wsh.webm";
	var t=setInterval(copyVideoToCanvas, 100);
}

function copyVideoToCanvas(){
	warhole_red();
	warhole_green();
	warhole_yellow();
	warhole_blue();
}

function changeThreshold(){
	threshold = slider.value;
	output.value = threshold;
}


function changeAlpha(){
	alpha = aslider.value;
	aoutput.value = alpha;
}

function newimg(){
	var datauri = this.toDataURL("image/png");
	window.open(datauri);
}


function warhole_red(name){

	var thecanvasred = document.querySelector('#red');
	var ctx = thecanvasred.getContext("2d");
	ctx.drawImage(video_element, 0, 0, thecanvas.width, thecanvas.height );
	var imgdata = ctx.getImageData(0, 0, thecanvas.width, thecanvas.height);
	var pixels = imgdata.data;
	
	for (var i = 0, n = pixels.length; i < n; i += 4) {
	var final = pixels[i] * 0.21 + pixels[i+1] * 0.71 + pixels[i+2] * 0.07 ;
	
		if (final > threshold){
			final = 255;
		} else {
			final = 0;
		}
	pixels[i] = pixels[i+1] = pixels[i+2] = final;
	pixels[i] += 255; pixels[i+1] +=0; pixels[i+2] +=0;
	
	pixels[i+3] = alpha;
	
	}
	
	// Draw the ImageData at the given (x,y) coordinates.
	ctx.putImageData(imgdata, 0, 0);
	
}


function warhole_green(name){
	var thecanvasred = document.querySelector('#green');
	var ctx = thecanvasred.getContext("2d");
	ctx.drawImage(video_element, 0, 0, thecanvas.width, thecanvas.height );
	var imgdata = ctx.getImageData(0, 0, thecanvas.width, thecanvas.height);
	var pixels = imgdata.data;

	// Loop over each pixel and invert the color.
	for (var i = 0, n = pixels.length; i < n; i += 4) {
	var final = pixels[i] * 0.21 + pixels[i+1] * 0.71 + pixels[i+2] * 0.07 ; 
	
		if (final > threshold){
			final = 255;
		} else {
			final = 0;
		}
	pixels[i] = pixels[i+1] = pixels[i+2] = final;
	pixels[i] += 0; pixels[i+1] +=255; pixels[i+2] +=0; 
	pixels[i+3] = alpha;
	}
	
	// Draw the ImageData at the given (x,y) coordinates.
	ctx.putImageData(imgdata, 0, 0);
}


function warhole_yellow(name){
	var thename = ""+name+"";
	var thecanvasred = document.querySelector('#yellow');
	var ctx = thecanvasred.getContext("2d");
	ctx.drawImage(video_element, 0, 0, thecanvas.width, thecanvas.height );
	var imgdata = ctx.getImageData(0, 0, thecanvas.width, thecanvas.height);
	var pixels = imgdata.data;

	
	// Loop over each pixel and invert the color.
	for (var i = 0, n = pixels.length; i < n; i += 4) {
	var final = pixels[i] * 0.21 + pixels[i+1] * 0.71 + pixels[i+2] * 0.07 ;
	
		if (final > threshold){
			final = 255;
		} else {
			final = 0;
		}
		
	pixels[i] = pixels[i+1] = pixels[i+2] = final;
	pixels[i] += 255; pixels[i+1] +=255; pixels[i+2] +=0; 
	
	pixels[i+3] = alpha;
	}
	
	// Draw the ImageData at the given (x,y) coordinates.
	ctx.putImageData(imgdata, 0, 0);
}


function warhole_blue(name){
	var thename = ""+name+"";
	var thecanvasred = document.querySelector('#blue');
	var ctx = thecanvasred.getContext("2d");
	ctx.drawImage(video_element, 0, 0, thecanvas.width, thecanvas.height );
	var imgdata = ctx.getImageData(0, 0, thecanvas.width, thecanvas.height);
	var pixels = imgdata.data;

	// Loop over each pixel and invert the color.
	for (var i = 0, n = pixels.length; i < n; i += 4) {
	var final = pixels[i] * 0.21 + pixels[i+1] * 0.71 + pixels[i+2] * 0.07 ; 
	
		if (final > threshold){
			final = 255;
		} else {
			final = 0;
		}
	pixels[i] = pixels[i+1] = pixels[i+2] = final;
	pixels[i] += 0; pixels[i+1] +=0; pixels[i+2] +=255; 
	
	pixels[i+3] = alpha;
	}
	
	// Draw the ImageData at the given (x,y) coordinates.
	ctx.putImageData(imgdata, 0, 0);
	
}


</script>

</body>
</html>